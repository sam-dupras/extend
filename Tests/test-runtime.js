// ===========================================================================
// RUNTIME
// ===========================================================================

Testing.test("R: extend.isString")
	Testing.asFalse(extend.isString([]))
	Testing.asFalse(extend.isString([1,2,3,4]))
	Testing.asFalse(extend.isString(1))
	Testing.asTrue(extend.isString(""))
	Testing.asTrue(extend.isString("hello"))
	Testing.asTrue(extend.isString("1"))
	Testing.asFalse(extend.isString({}))
	Testing.asFalse(extend.isString({0:0,1:1,2:2}))
	Testing.asFalse(extend.isString(true))
	Testing.asFalse(extend.isString(false))
	Testing.asFalse(extend.isString(null))
	Testing.asFalse(extend.isString(undefined))
Testing.end()

Testing.test("R: extend.isList")
	Testing.asTrue(extend.isList([]))
	Testing.asTrue(extend.isList([1,2,3,4]))
	Testing.asFalse(extend.isList(1))
	Testing.asFalse(extend.isList(""))
	Testing.asFalse(extend.isList("hello"))
	Testing.asFalse(extend.isList("1"))
	Testing.asFalse(extend.isList({}))
	Testing.asFalse(extend.isList({0:0,1:1,2:2}))
	Testing.asFalse(extend.isList(true))
	Testing.asFalse(extend.isList(false))
	Testing.asFalse(extend.isList(null))
	Testing.asFalse(extend.isList(undefined))
Testing.end()

Testing.test("R: extend.isMap")
	Testing.asFalse(extend.isMap([]))
	Testing.asFalse(extend.isMap([1,2,3,4]))
	Testing.asFalse(extend.isMap(1))
	Testing.asFalse(extend.isMap(""))
	Testing.asFalse(extend.isMap("hello"))
	Testing.asFalse(extend.isMap("1"))
	Testing.asTrue(extend.isMap({}))
	Testing.asTrue(extend.isMap({0:0,1:1,2:2}))
	Testing.asFalse(extend.isMap(true))
	Testing.asFalse(extend.isMap(false))
	Testing.asFalse(extend.isMap(null))
	Testing.asFalse(extend.isMap(undefined))
Testing.end()

Testing.test("R: extend.slice for strings")
	Testing.same(extend.slice(""), "")
	Testing.same(extend.slice("hello"), "hello")
	Testing.same(extend.slice("hello", 0),    "hello")
	Testing.same(extend.slice("hello", 0, 1), "h")
	Testing.same(extend.slice("hello", 0, 2), "he")
	Testing.same(extend.slice("hello", 1, 2), "e")
	Testing.same(extend.slice("hello", 0, 5), "hello")
	Testing.same(extend.slice("hello", -1),    "o")
	Testing.same(extend.slice("hello", -2),    "lo")
	Testing.same(extend.slice("hello", -2, -1),"l")
	Testing.same(extend.slice("hello", -2, 5),"lo")
Testing.end()

Testing.test("R: extend.createMapFromItems")
	Testing.same(extend.createMapFromItems(), {})
	Testing.same(extend.createMapFromItems(["a",1]), {a:1})
	Testing.same(extend.createMapFromItems(["a",1],["b",2]),{a:1,b:2})
Testing.end()

Testing.test("R: extend.isIn")
	Testing.asTrue(extend.isIn(0,[0]))
	Testing.asTrue(extend.isIn(0,[1,0]))
	Testing.asTrue(extend.isIn(0,[1,0,0]))
	Testing.asFalse(extend.isIn(9,[1,0,0]))
Testing.end()

// END
